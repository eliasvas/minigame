cmake_minimum_required(VERSION 3.10)
project(Minigame)
project(Minigame VERSION 1.0)
set (CMAKE_C_STANDARD 99)
add_executable(Minigame main.c mAlloc.c mg.c mProfiler.c SDL_backend.c)
target_include_directories(Minigame PUBLIC "${PROJECT_BINARY_DIR}")
target_include_directories(Minigame PUBLIC "${PROJECT_BINARY_DIR}/../include")
#for windows, we put sdl2 and sdl2_mixer binaries in root folder..
if (WIN32)
    target_include_directories(Minigame PUBLIC "${PROJECT_BINARY_DIR}/../SDL2/include")
    target_include_directories(Minigame PUBLIC "${PROJECT_BINARY_DIR}/../SDL2_mixer/include")
    if(CMAKE_SIZEOF_VOID_P EQUAL 8)
        target_link_libraries(Minigame PUBLIC "${PROJECT_BINARY_DIR}/../SDL2/lib/x64/SDL2.lib")
        target_link_libraries(Minigame PUBLIC "${PROJECT_BINARY_DIR}/../SDL2/lib/x64/SDL2main.lib")
        target_link_libraries(Minigame PUBLIC "${PROJECT_BINARY_DIR}/../SDL2_mixer/lib/x64/SDL2_mixer.lib")

    elseif(CMAKE_SIZEOF_VOID_P EQUAL 4)
        target_link_libraries(Minigame PUBLIC "${PROJECT_BINARY_DIR}/../SDL2/lib/x86/SDL2.lib")
        target_link_libraries(Minigame PUBLIC "${PROJECT_BINARY_DIR}/../SDL2/lib/x86/SDL2main.lib")
        target_link_libraries(Minigame PUBLIC "${PROJECT_BINARY_DIR}/../SDL2_mixer/lib/x86/SDL2_mixer.lib")
    endif()
endif()